<controls:PageBase x:Class="Mailer.View.Main.MainPageView"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   xmlns:local="clr-namespace:Mailer.View.Main"
                   xmlns:controls="clr-namespace:Mailer.Controls"
                   xmlns:localization="clr-namespace:Mailer.Resources.Localization"
                   xmlns:behaviours="clr-namespace:Mailer.Behaviours"
                   xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                   xmlns:converters="clr-namespace:Mailer.UI.Converters"
                   xmlns:converters1="clr-namespace:Mailer.Converters"
                   xmlns:layout="clr-namespace:Mailer.Layout"
                   xmlns:dd="urn:gong-wpf-dragdrop"
                   xmlns:helpers="clr-namespace:Mailer.Helpers"
                   mc:Ignorable="d"
                   d:DesignHeight="700" d:DesignWidth="1024"
                   Title="MailView">
    <Page.Resources>
        <CollectionViewSource x:Key="MailFolders" Source="{Binding FoldersExtended}" />
        <CollectionViewSource x:Key="EnvelopeCollection" Source="{Binding MailEnvelopeCollection}" />

        <Style x:Key="TextBlockButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Opacity" Value="0.5" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Opacity" Value="0.9"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    <Page.RenderTransform>
        <TranslateTransform />
    </Page.RenderTransform>

    <Page.Triggers>
        <EventTrigger RoutedEvent="Page.Loaded">
            <BeginStoryboard Storyboard="{StaticResource PageLoadAnim}" />
        </EventTrigger>
    </Page.Triggers>

    <Grid>
        <Grid
            Visibility="{Binding IsWorking, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=True}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Rectangle Grid.Column="0" Fill="{DynamicResource MainBackgroundBrush}" Margin="0,0,0,0" Opacity="0.4" />
            <StackPanel Grid.Column="0">
                <Button x:Name="MailerButton" HorizontalAlignment="Left" Margin="0,5,0,0"
                        Foreground="{DynamicResource ForegroundBrush}"
                        Command="{Binding GoToSettingsCommand}"
                        ToolTip="{x:Static localization:MainResources.Settings}">
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <StackPanel x:Name="rootPanel" Opacity="0.7" Orientation="Horizontal"
                                        Background="Transparent">
                                <TextBlock x:Name="Title" VerticalAlignment="Center" HorizontalAlignment="Left"
                                           Foreground="{TemplateBinding Foreground}" Opacity="1" FontSize="13"
                                           Margin="10,1,0,0" Text="Mailer" FontWeight="Regular"
                                           TextOptions.TextFormattingMode="Display" />
                                <Path x:Name="Icon" Data="{StaticResource SettingsIcon}"
                                      Fill="{TemplateBinding Foreground}" Stretch="Uniform" Width="12" Margin="8,3,0,0" />
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value="1" TargetName="rootPanel" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Opacity" Value="0.6" TargetName="rootPanel" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <StackPanel Orientation="Horizontal" Margin="10,10,0,0">
                    <TextBlock Text="{x:Static localization:MainResources.Folders}" FontSize="11" Opacity="0.7"
                               Foreground="{DynamicResource ForegroundBrush}" FontWeight="SemiBold" />
                    <Button Style="{StaticResource AddButtonStyle}" VerticalAlignment="Top" Margin="3,0,0,0"
                            Command="{Binding AddFolderCommand}"
                            ToolTip="{x:Static localization:MainResources.AddFolderHint}" />
                </StackPanel>
                <ListBox x:Name="MenuListBox" Padding="0,0,0,10" Margin="0,12,0,0" MaxHeight="500"
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                         ItemsSource="{Binding Source={StaticResource MailFolders}}"
                         Foreground="{DynamicResource ForegroundBrush}"
                         Style="{StaticResource CommonListBoxStyle}"
                         ItemContainerStyle="{StaticResource MainMenuListBoxItemStyle}"
                         ItemTemplate="{StaticResource ListBoxItemTemplate}"
                         HorizontalContentAlignment="Stretch"
                         SelectedIndex="{Binding SelectedFolder}">
                    <i:Interaction.Behaviors>
                        <behaviours:TransitionBehaviour Transition="{StaticResource MainMenuLoadAnim}" TransitionDelay="40" />
                    </i:Interaction.Behaviors>
                </ListBox>
                <StackPanel Orientation="Horizontal" Margin="10,0,0,0">
                    <Button Content="{x:Static localization:MainResources.FoldersClear}" Style="{StaticResource TextBlockButtonStyle}" HorizontalAlignment="Left" Command="{Binding ClearFolderCommand}"/>
                    <Button Content="{x:Static localization:MainResources.FoldersDelete}" Style="{StaticResource TextBlockButtonStyle}" HorizontalAlignment="Left" Margin="10,0,0,0" Command="{Binding DeleteFolderCommand}"/>
                    <Button Content="{x:Static localization:MainResources.Refresh}" Style="{StaticResource TextBlockButtonStyle}" HorizontalAlignment="Left" Margin="10,0,0,0" Command="{Binding RefreshCommand}"/>
                </StackPanel>
                <Button Style="{StaticResource HighlightedButtonStyle}" Content="{x:Static localization:MainResources.NewMessage}" Command="{Binding NewMessageCommand}"  Margin="0,5,0,0" Height="30"/>
            </StackPanel>
            <Grid Grid.Column="1" Margin="0,33,10,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal" Grid.Row="0" Margin="28,0,0,0" Visibility="{Binding IsMessagesLoading, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=True}">
                    <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}" FontSize="12" Opacity="0.7" Foreground="{DynamicResource ForegroundBrush}"
                              VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,5,0"/>
                    <Button x:Name="MarkButton" Content="{x:Static localization:MainResources.MessagesMark}" Style="{StaticResource TextBlockButtonStyle}" Margin="0,0,0,0" HorizontalAlignment="Center" Click="MarkButton_OnClick">
                        <Button.ContextMenu>
                            <ContextMenu Style="{StaticResource CommonContextMenuStyle}" ItemContainerStyle="{StaticResource CommonContextMenuItemStyle}" Focusable="False">
                                <MenuItem Header="{x:Static localization:MainResources.AsReaded}" Command="{Binding MarkMessagesCommand}" CommandParameter="{x:Static helpers:MarkAs.Readed}"/>
                                <MenuItem Header="{x:Static localization:MainResources.AsUnreaded}" Command="{Binding MarkMessagesCommand}" CommandParameter="{x:Static helpers:MarkAs.Unreaded}"/>
                            </ContextMenu>
                        </Button.ContextMenu>
                    </Button>
                    <Button x:Name="MoveButton" Content="{x:Static localization:MainResources.MessagesMove}" Style="{StaticResource TextBlockButtonStyle}" Margin="20,0,0,0" HorizontalAlignment="Center" Click="MoveButton_OnClick">
                        <Button.ContextMenu>
                            <ContextMenu Style="{StaticResource CommonContextMenuStyle}" Focusable="False" ItemsSource="{Binding Actions}" ItemContainerStyle ="{StaticResource CommonContextMoveMenuItemStyle}"/>
                        </Button.ContextMenu>
                    </Button>
                    <Button x:Name="DeleteButton" Content="{x:Static localization:MainResources.MessagesDelete}" Style="{StaticResource TextBlockButtonStyle}" Margin="20,0,0,0" HorizontalAlignment="Center" Command="{Binding DeleteMessagesCommand}"/>
                </StackPanel>
                <Grid Grid.Row="1">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ListBox Grid.Row="0" x:Name="MessagesListBox"
                             Visibility="{Binding IsMessagesLoading, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=True}"
                             ItemsSource="{Binding Source={StaticResource EnvelopeCollection}}"
                             Style="{StaticResource CommonListBoxStyle}"
                             Foreground="{DynamicResource ForegroundBrush}"
                             ItemContainerStyle="{StaticResource AudioListBoxItemStyle}"
                             ItemTemplate="{StaticResource MessageItemTemplate}"
                             VirtualizingStackPanel.ScrollUnit="Pixel"
                             ScrollViewer.ScrollChanged="MessagesListBox_OnScrollChanged"
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                            <ListBox.RenderTransform>
                                <TranslateTransform />
                            </ListBox.RenderTransform>
                            <i:Interaction.Behaviors>
                                <behaviours:TransitionBehaviour Transition="{StaticResource AudioLoadAnim}" TransitionDelay="40" />
                            </i:Interaction.Behaviors>
                        </ListBox>
                        <Button Grid.Row="1" Style="{StaticResource HighlightedButtonStyle}" Visibility="{Binding IsLoadMoreButtonVisible, Converter={StaticResource BoolToVisibilityConverter}}" Content="Load more" 
                            Command="{Binding LoadMoreCommand}" CommandParameter="{Binding SelectedFolder}"  Margin="0,10,0,10" Width="150" Height="25" VerticalAlignment="Bottom"/>
                    </Grid>
                    <StackPanel Visibility="{Binding IsMessagesLoading, Converter={StaticResource BoolToVisibilityConverter}}" VerticalAlignment="Center" Margin="0,0,0,0">
                        <TextBlock Text="{x:Static localization:MainResources.WaitMessage}" FontSize="22"
                                   HorizontalAlignment="Center" FontWeight="Light"
                                   Foreground="{DynamicResource ForegroundBrush}" />
                        <ProgressBar Style="{StaticResource CommonProgressBarStyle}"
                                     IsIndeterminate="{Binding IsMessagesLoading}" />
                    </StackPanel>
                </Grid>
                
            </Grid>
            <Rectangle Width="1" Grid.Column="1" HorizontalAlignment="Left"
                       Fill="{DynamicResource MainBackgroundSplitterBrush}" SnapsToDevicePixels="True"
                       Margin="-1,0,0,0" />
        </Grid>
        <StackPanel Visibility="{Binding IsWorking, Converter={StaticResource BoolToVisibilityConverter}}"
                    VerticalAlignment="Center" Margin="0,0,0,0">
            <TextBlock Text="{x:Static localization:MainResources.WaitMessage}" FontSize="22"
                       HorizontalAlignment="Center" FontWeight="Light" Foreground="{DynamicResource ForegroundBrush}" />
            <ProgressBar Style="{StaticResource CommonProgressBarStyle}" IsIndeterminate="{Binding IsWorking}" />
        </StackPanel>
    </Grid>
</controls:PageBase>