<controls:PageBase x:Class="Mailer.View.Main.MailView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Mailer.View.Main"
      xmlns:controls="clr-namespace:Mailer.Controls"
      xmlns:localization="clr-namespace:Mailer.Resources.Localization"
      xmlns:behaviours="clr-namespace:Mailer.Behaviours"
      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
      xmlns:converters="clr-namespace:Mailer.UI.Converters"
      xmlns:converters1="clr-namespace:Mailer.Converters"
                   xmlns:layout="clr-namespace:Mailer.Layout"
                   xmlns:dd="urn:gong-wpf-dragdrop"
                   mc:Ignorable="d" 
      d:DesignHeight="700" d:DesignWidth="1024"
      Title="MailView">
    <Page.Resources>

        <Storyboard x:Key="TransitionIn">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase Exponent="6" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(RenderTransform).X">
                <DiscreteDoubleKeyFrame KeyTime="0" Value="30" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase Exponent="6" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="TransitionOut">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase Exponent="8" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <converters:BooleanToObjectConverter x:Key="WindowMarginConverter" TrueObject="6,6,6,0" FalseObject="0"/>
        <CollectionViewSource x:Key="MailFolders" Source="{Binding FoldersExtended}"/>
        <CollectionViewSource x:Key="MessagesCollection" Source="{Binding MailMessageCollection}"/>

        <Style x:Key="NormalGroupStyle" TargetType="{x:Type GroupItem}">
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupItem}">
                        <Grid Margin="0,0,0,20">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Path Data="{Binding Items[0].GroupIcon}" Stretch="Uniform" Fill="{DynamicResource SidebarForegroundBrush}" Height="8" Margin="17,1,-10,0" Opacity="0.4" VerticalAlignment="Center"
                                  Visibility="{Binding Items[0].GroupIcon, Converter={StaticResource NullToVisibilityConverter}}"/>
                            <TextBlock Grid.Column="1" FontWeight="SemiBold" Text="{Binding Path=Name}" Margin="17,0,0,0" FontSize="12" Foreground="{DynamicResource SidebarGroupForegroundBrush}"/>
                            <ItemsPresenter Grid.Row="1" Grid.ColumnSpan="2" Margin="0,5,0,0"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="EmptyHeaderGroupStyle" TargetType="{x:Type GroupItem}">
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupItem}">
                        <Grid Margin="0,0,0,20">
                            <ItemsPresenter Margin="0,0,0,0"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <converters1:MainMenuGroupStyleSelector x:Key="MainMenuGroupStyleSelector" NormalGroupStyle="{StaticResource NormalGroupStyle}" EmptyHeaderGroupStyle="{StaticResource EmptyHeaderGroupStyle}"/>
    </Page.Resources>

    <Page.RenderTransform>
        <TranslateTransform />
    </Page.RenderTransform>

    <Page.Triggers>
        <EventTrigger RoutedEvent="Page.Loaded">
            <BeginStoryboard Storyboard="{StaticResource PageLoadAnim}" />
        </EventTrigger>
    </Page.Triggers>

    <Grid>
        <Grid Visibility="{Binding IsWorking, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=True}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Rectangle Grid.Column="0" Fill="{DynamicResource MainBackgroundBrush}" Margin="0,0,0,0" Opacity="0.4"/>
            <StackPanel Grid.Column="0">
                <Button x:Name="MailerButton" HorizontalAlignment="Left" Margin="0,5,0,0"
                        Foreground="{DynamicResource ForegroundBrush}"
                        Command="{Binding GoToSettingsCommand}" ToolTip="{x:Static localization:MainResources.Settings}">
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <StackPanel x:Name="rootPanel" Opacity="0.7" Orientation="Horizontal" Background="Transparent">
                                <TextBlock x:Name="Title" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="{TemplateBinding Foreground}" Opacity="1" FontSize="13" Margin="10,1,0,0" Text="Mailer" FontWeight="Regular" TextOptions.TextFormattingMode="Display"/>
                                <Path x:Name="Icon" Data="{StaticResource SettingsIcon}" Fill="{TemplateBinding Foreground}" Stretch="Uniform" Width="12" Margin="8,3,0,0"/>
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value="1" TargetName="rootPanel"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Opacity" Value="0.6" TargetName="rootPanel"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <StackPanel Orientation="Horizontal" Margin="10,10,0,0">
                    <TextBlock Text="Folders" FontSize="11" Opacity="0.7" Foreground="{DynamicResource ForegroundBrush}" FontWeight="SemiBold"/>
                    <Button Style="{StaticResource AddButtonStyle}" VerticalAlignment="Top" Margin="3,0,0,0" Command="{Binding AddFolderCommand}"
                        ToolTip="Add new folder"/>
                </StackPanel>
                <ListBox x:Name="MenuListBox" Padding="0,0,0,10" Margin="0,12,0,0" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     ItemsSource="{Binding Source={StaticResource MailFolders}}"
                     Foreground="{DynamicResource ForegroundBrush}"
                     Style="{StaticResource CommonListBoxStyle}"
                     ItemContainerStyle="{StaticResource MainMenuListBoxItemStyle}"
                     ItemTemplate="{StaticResource ListBoxItemTemplate}"
                     HorizontalContentAlignment="Stretch"
                     SelectedIndex="{Binding SelectedFolder}">
                    <i:Interaction.Behaviors>
                        <behaviours:TransitionBehaviour Transition="{StaticResource MainMenuLoadAnim}" TransitionDelay="40" />
                    </i:Interaction.Behaviors>
                </ListBox>
                <!--<StackPanel Orientation="Vertical" VerticalAlignment="Bottom" Margin="10,12,5,0">
                <TextBlock Text="Last refresh: 5 mins ago" FontSize="14" Foreground="{DynamicResource ForegroundBrush}"/>
            </StackPanel>-->
            </StackPanel>
            <Grid Grid.Column="1" Margin="0,35,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                
                <!--Эту пизду сделать в гриде что бы растягивалось нормально-->
                <!--<StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Style="{StaticResource HighlightedButtonStyle}" Content="Test" Command="{Binding OkCommand}"  Margin="0,0,10,0" Width="150" Height="20"/>
                <Button Style="{StaticResource HighlightedButtonStyle}" Content="Test" Command="{Binding OkCommand}"  Margin="0,0,10,0" Width="150" Height="20"/>
                <Button Style="{StaticResource HighlightedButtonStyle}" Content="Test" Command="{Binding OkCommand}"  Margin="0,0,10,0" Width="150" Height="20"/>
                <controls:TextBoxWithHint x:Name="LocalSearchBox" Style="{StaticResource LocalSearchBoxStyle}" Padding="0,0,0,0" Hint="Start typing" Height="20" Width="150" Margin="0,0,20,0"
                                      HintStyle="{StaticResource TextBoxHintStyle}"
                                      TextChanged="LocalSearchBox_TextChanged" FontSize="12"/>
            </StackPanel>-->
                <Grid Grid.Row="1" Visibility="{Binding IsMessageFormVisible, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=True}">
                    <ListBox x:Name="MessagesListBox"
                             Visibility="{Binding IsMessagesLoading, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=True}"
                             ItemsSource="{Binding Source={StaticResource MessagesCollection}}"
                             Style="{StaticResource CommonListBoxStyle}"
                             Foreground="{DynamicResource ForegroundBrush}"
                             ItemContainerStyle="{StaticResource AudioListBoxItemStyle}"
                             ItemTemplate="{StaticResource MessageItemTemplate}"
                             VirtualizingStackPanel.ScrollUnit="Pixel" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ListBox.RenderTransform>
                            <TranslateTransform />
                        </ListBox.RenderTransform>
                        <i:Interaction.Behaviors>
                            <behaviours:TransitionBehaviour Transition="{StaticResource AudioLoadAnim}" TransitionDelay="40" />
                        </i:Interaction.Behaviors>
                    </ListBox>
                    <StackPanel Visibility="{Binding IsMessagesLoading, Converter={StaticResource BoolToVisibilityConverter}}" VerticalAlignment="Center" Margin="0,0,0,0" >
                        <TextBlock Text="{x:Static localization:MainResources.WaitMessage}" FontSize="22" HorizontalAlignment="Center" FontWeight="Light" Foreground="{DynamicResource ForegroundBrush}"/>
                        <ProgressBar Style="{StaticResource CommonProgressBarStyle}" IsIndeterminate="{Binding IsMessagesLoading}"/>
                    </StackPanel>
                </Grid>

                <Grid Grid.Row="1" Visibility="{Binding IsMessageFormVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                    <!--<i:Interaction.Behaviors>
                        <behaviours:VisibilityTransitionBehaviour
                            Value="{Binding IsMessageFormVisible, Converter={StaticResource BoolToVisibilityConverter}}"
                            AnimationIn="{StaticResource TransitionIn}" AnimationOut="{StaticResource TransitionOut}" />
                    </i:Interaction.Behaviors>-->
                    <Grid Margin="10,0,10,10" Visibility="{Binding IsMessageLoading, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=True}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="25"/>
                            <RowDefinition Height="25"/>
                            <RowDefinition Height="25"/>
                            <RowDefinition/>
                            <RowDefinition Height="30"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Text="{Binding Message.Subject}" FontSize="22" HorizontalAlignment="Left" FontWeight="Light" Foreground="{DynamicResource ForegroundBrush}"/>
                        <TextBlock Grid.Row="1" Text="{Binding Message.From}" FontSize="18" HorizontalAlignment="Left" FontWeight="Light" Foreground="{DynamicResource ForegroundBrush}"/>
                        <TextBlock Grid.Row="2" Text="{Binding Message.To.AsString}" FontSize="18" HorizontalAlignment="Left" FontWeight="Light" Foreground="{DynamicResource ForegroundBrush}"/>
                        <TextBlock Grid.Row="3" Text="{Binding Message.DateReceived}" FontSize="18" HorizontalAlignment="Left" FontWeight="Light" Foreground="{DynamicResource ForegroundBrush}"/>
                        <TextBox Grid.Row="4" Text="{Binding Message.BodyPlainText}" Foreground="{DynamicResource ForegroundBrush}"
                                 ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                 ScrollViewer.VerticalScrollBarVisibility="Auto" 
                                 Style="{StaticResource CommonTextBoxStyle}" />
                        <StackPanel Grid.Row="5" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,5,0,0">
                            <Button Content="Ответить" Padding="23,3" Margin="0,0,10,0"
                                    Style="{StaticResource HighlightedButtonStyle}" Command="{Binding CopyCommand}" />
                            <Button Content="Закрыть" Padding="23,3" Style="{StaticResource CommonButtonStyle}"
                                    Command="{Binding CloseMessageCommand}" />
                        </StackPanel>
                    </Grid>
                    <StackPanel Visibility="{Binding IsMessageLoading, Converter={StaticResource BoolToVisibilityConverter}}" VerticalAlignment="Center" Margin="0,0,0,0" >
                        <TextBlock Text="{x:Static localization:MainResources.WaitMessage}" FontSize="22" HorizontalAlignment="Center" FontWeight="Light" Foreground="{DynamicResource ForegroundBrush}"/>
                        <ProgressBar Style="{StaticResource CommonProgressBarStyle}" IsIndeterminate="{Binding IsMessageLoading}"/>
                    </StackPanel>
                </Grid>
            </Grid>
            <Rectangle Width="1" Grid.Column="1" HorizontalAlignment="Left" Fill="{DynamicResource MainBackgroundSplitterBrush}" SnapsToDevicePixels="True" Margin="-1,0,0,0"/>
        </Grid>
        <StackPanel Visibility="{Binding IsWorking, Converter={StaticResource BoolToVisibilityConverter}}" VerticalAlignment="Center" Margin="0,0,0,0" >
            <TextBlock Text="{x:Static localization:MainResources.WaitMessage}" FontSize="22" HorizontalAlignment="Center" FontWeight="Light" Foreground="{DynamicResource ForegroundBrush}"/>
            <ProgressBar Style="{StaticResource CommonProgressBarStyle}" IsIndeterminate="{Binding IsWorking}"/>
        </StackPanel>
    </Grid>
</controls:PageBase>

